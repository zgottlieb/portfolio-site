---
import Icon from "./Icon.astro";
import ThemeToggle from "./ThemeToggle.astro";
import type { iconPaths } from "./IconPaths";

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
  { label: "Home", href: "/" },
  { label: "Work", href: "/work/" },
  { label: "Resume", href: "/resume/" },
];

/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: {
  label: string;
  href: string;
  icon: keyof typeof iconPaths;
}[] = [
  {
    label: "GitHub",
    href: "https://github.com/zgottlieb",
    icon: "github-logo",
  },
  {
    label: "LinkedIn",
    href: "https://linkedin.com/in/zachg",
    icon: "linkedin-logo",
  },
];

/** Test if a link is pointing to the current page. */
const isCurrentPage = (href: string) => {
  let pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
  if (pathname.at(0) !== "/") pathname = "/" + pathname;
  if (pathname.at(-1) !== "/") pathname += "/";
  return pathname === href || (href !== "/" && pathname.startsWith(href));
};
---

<nav class="nav">
  <div class="nav-container">
    <div class="site-title">
      <a href="/" class="site-title-link">Zach Gottlieb</a>
    </div>
    <div class="links">
      <ul class="nav-items">
        {
          textLinks.map(({ label, href }) => (
            <li>
              <a
                aria-current={isCurrentPage(href) ? "page" : null}
                class="nav-link"
                href={href}
              >
                {label}
              </a>
            </li>
          ))
        }
      </ul>
      <div class="socials">
        <span class="delimiter">|</span>
        {
          iconLinks.map(({ href, icon, label }) => (
            <a href={href} class="social" aria-label={label}>
              <Icon icon={icon} />
            </a>
          ))
        }
      </div>
    </div>
  </div>
</nav>

<style>
  .nav {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem 0;
    background-color: transparent;
  }

  .nav-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    max-width: 1200px; /* Match the content width of other pages */
    padding: 0 2rem; /* Adjust padding to align with page content */
  }

  .site-title {
    font-size: 1.25rem;
    font-weight: bold;
  }

  .site-title-link {
    color: var(--gray-300);
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .site-title-link:hover,
  .site-title-link:focus {
    color: var(--accent-regular);
  }

  .links {
    display: flex;
    align-items: center; /* Ensure text and social links are on the same line */
    gap: 1rem;
  }

  .nav-items {
    display: flex;
    gap: 2rem;
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .nav-link {
    font-size: 1rem;
    font-weight: 500;
    color: var(--gray-300);
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .nav-link:hover,
  .nav-link:focus {
    color: var(--accent-regular);
  }

  .nav-link[aria-current="page"] {
    color: var(--accent-regular);
    font-weight: bold;
  }

  .socials {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .delimiter {
    font-size: 1rem;
    color: var(--gray-300);
  }

  .social {
    font-size: 1.5rem;
    color: var(--gray-300);
    transition: color 0.3s ease;
  }

  .social:hover,
  .social:focus {
    color: var(--accent-regular);
  }

  .view-all-button {
    display: inline-block;
    padding: 0.5rem 1rem;
    font-size: 1rem;
    font-weight: 500;
    color: var(--gray-300);
    border: 1px solid var(--gray-300);
    border-radius: 0.25rem;
    text-decoration: none;
    background-color: transparent;
    transition: all 0.3s ease;
    text-align: center;
  }

  .view-all-button:hover,
  .view-all-button:focus {
    color: var(--accent-regular);
    border-color: var(--accent-regular);
    background-color: var(--gray-900);
  }
</style>
